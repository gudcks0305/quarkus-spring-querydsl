plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-spring-security'
    implementation 'io.quarkus:quarkus-spring-scheduled'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-spring-web'
    implementation 'io.quarkus:quarkus-logging-json'
    implementation 'io.quarkus:quarkus-spring-data-jpa'
    implementation 'io.quarkus:quarkus-spring-boot-properties'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-jdbc-h2'
    implementation 'io.quarkus:quarkus-spring-cache'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-spring-data-rest'
    implementation 'io.quarkus:quarkus-jackson'
    implementation 'io.quarkus:quarkus-spring-di'
    implementation 'io.quarkus:quarkus-spring-cloud-config-client'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'com.querydsl:querydsl-core:5.1.0'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'


}

group 'com.hc.quarkus'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    doLast {
        sourceSets.main.java.srcDirs += file("${buildDir}/generated/querydsl")
    }
}
def querydslDir = "src/main/generated"

tasks.register('generateQueryDSL', JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compileClasspath + configurations.annotationProcessor
    destinationDirectory = file(querydslDir)
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor",
            "-s", querydslDir
    ]
}
compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

sourceSets {
    main.java.srcDirs += "build/generated/querydsl"
}
